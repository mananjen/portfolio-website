{"version":3,"file":"static/js/825.d027a647.chunk.js","mappings":"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","sources":["components/ImageComponent.jsx","firebase.js","components/ProjectCard.jsx","pages/Projects.jsx","hooks/useProjects.js"],"sourcesContent":["// src/components/ImageComponent.jsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ImageContainer = styled.div`\r\n  text-align: center;\r\n  margin: 1rem 0;\r\n`;\r\n\r\nconst StyledImage = styled.img`\r\n  max-width: 100%;\r\n  height: auto;\r\n  border-radius: 50%; /* Makes it circular - remove if not desired */\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst ImageComponent = ({ src, alt, width, height, ...props }) => {\r\n  return (\r\n    <ImageContainer>\r\n      <StyledImage src={src} alt={alt} width={width} height={height} {...props} />\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nexport default ImageComponent;","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCUD71QNdj1eSt-elHLS_NXNtIoTOgn97A\",\r\n  authDomain: \"portfolio-website-db.firebaseapp.com\",\r\n  projectId: \"portfolio-website-db\",\r\n  storageBucket: \"portfolio-website-db.firebasestorage.app\",\r\n  messagingSenderId: \"243971231959\",\r\n  appId: \"1:243971231959:web:a0e5110d3353a756fde092\",\r\n  measurementId: \"G-RVTE4D6LX1\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\r\nexport { db };","// src/components/ProjectCard.jsx\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { device } from '../constants/screenSizes';\r\nimport ImageComponent from './ImageComponent';\r\nimport CustomLink from './CustomLink';\r\n\r\nconst CardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 2rem 0;\r\n  margin-bottom: 2rem;\r\n  border-bottom: 1px solid #ddd;\r\n\r\n  @media ${device.desktop} {\r\n    flex-direction: ${props => props.flip ? 'row-reverse' : 'row'};\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: 2rem;\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 1.8rem;\r\n  color: ${props => props.theme.colors.text};\r\n  margin-bottom: 0.5rem;\r\n\r\n  @media ${device.desktop} {\r\n    font-size: 2rem;\r\n  }\r\n`;\r\n\r\nconst DateRange = styled.p`\r\n  font-size: 0.9rem;\r\n  color: #888;\r\n  margin-bottom: 0.8rem;\r\n`;\r\n\r\nconst DescriptionArea = styled.p`\r\n  font-size: 1.1rem;\r\n  line-height: 1.5;\r\n  color: #555;\r\n\r\n  @media ${device.desktop} {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nconst TechList = styled.ul`\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 0.5rem;\r\n  list-style: none;\r\n  padding: 0;\r\n\r\n  li {\r\n    background: #f0f0f0;\r\n    padding: 0.4rem 0.8rem;\r\n    border-radius: 4px;\r\n    font-size: 0.9rem;\r\n  }\r\n`;\r\n\r\nconst LinksArea = styled.div`\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  gap: 1rem;\r\n\r\n  a {\r\n    font-weight: 600;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst ImageArea = styled.div`\r\n  margin-top: 1.5rem;\r\n\r\n  img {\r\n    border-radius: 8px;\r\n    max-width: 100%;\r\n    box-shadow: 0 6px 12px rgba(0,0,0,0.1);\r\n  }\r\n\r\n  @media ${device.desktop} {\r\n    flex: 0 0 40%;\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nconst formatDate = (timestamp) => {\r\n  if (!timestamp) return \"Present\";\r\n  const date = timestamp.toDate();\r\n  return date.toLocaleString('default', { month: 'short', year: 'numeric' });\r\n};\r\n\r\nconst ProjectCard = ({ title, description, technologies, githubUrl, imageUrl, projectWebsiteUrl, documentUrl, startDate, endDate, flip }) => (\r\n  <CardContainer flip={flip}>\r\n    <TextArea>\r\n      <Title>{title}</Title>\r\n      {(startDate || endDate) && (\r\n        <DateRange>\r\n          {formatDate(startDate)} - {formatDate(endDate)}\r\n        </DateRange>\r\n      )}\r\n      <DescriptionArea>{description}</DescriptionArea>\r\n      {technologies && (\r\n        <TechList>\r\n          {technologies.map((tech, idx) => <li key={idx}>{tech}</li>)}\r\n        </TechList>\r\n      )}\r\n      <LinksArea>\r\n        {githubUrl && <CustomLink to={githubUrl} target=\"_blank\">GitHub</CustomLink>}\r\n        {projectWebsiteUrl && <CustomLink to={projectWebsiteUrl} target=\"_blank\">Project Website</CustomLink>}\r\n        {documentUrl && <CustomLink to={documentUrl} target=\"_blank\">Documentation</CustomLink>}\r\n      </LinksArea>\r\n    </TextArea>\r\n\r\n    {imageUrl && (\r\n      <ImageArea>\r\n        <ImageComponent src={imageUrl} alt={`Project ${title}`} />\r\n      </ImageArea>\r\n    )}\r\n  </CardContainer>\r\n);\r\n\r\nexport default ProjectCard;","// src/pages/Projects.jsx\r\nimport React from 'react';\r\nimport { useProjects } from '../hooks/useProjects';\r\nimport ProjectCard from '../components/ProjectCard';\r\nimport Loader from '../components/Loader';\r\n\r\nconst Projects = () => {\r\n  const { projects, loading } = useProjects();\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  return (\r\n    <section>\r\n      {projects.map((project, index) => (\r\n        <ProjectCard\r\n          key={project.id}\r\n          title={project.title}\r\n          description={project.description}\r\n          githubUrl={project.githubUrl}\r\n          imageUrl={project.imageUrl}\r\n          projectWebsiteUrl={project.projectWebsiteUrl}\r\n          documentUrl={project.documentUrl}\r\n          startDate={project.startDate}\r\n          endDate={project.endDate}\r\n          technologies={project.technologies}\r\n          flip={index % 2 !== 0}\r\n        />\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;","// src/hooks/useProjects.js\r\nimport { useState, useEffect } from 'react';\r\nimport { collection, getDocs, query, orderBy } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nexport const useProjects = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      const q = query(collection(db, \"projects\"), orderBy(\"startDate\", \"desc\"));\r\n      const querySnapshot = await getDocs(q);\r\n      const projectsList = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setProjects(projectsList);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  return { projects, loading };\r\n};"],"names":["ImageContainer","styled","div","StyledImage","img","_ref","src","alt","width","height","props","_jsx","children","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","CardContainer","device","desktop","flip","TextArea","Title","h2","theme","colors","text","DateRange","p","DescriptionArea","TechList","ul","LinksArea","ImageArea","formatDate","timestamp","toDate","toLocaleString","month","year","title","description","technologies","githubUrl","imageUrl","projectWebsiteUrl","documentUrl","startDate","endDate","_jsxs","map","tech","idx","CustomLink","to","target","ImageComponent","Projects","projects","loading","useProjects","setProjects","useState","setLoading","useEffect","async","q","query","collection","orderBy","projectsList","getDocs","docs","doc","id","data","fetchProjects","Loader","project","index","ProjectCard"],"sourceRoot":""}